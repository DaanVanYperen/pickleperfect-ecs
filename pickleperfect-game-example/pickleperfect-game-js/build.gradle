apply plugin: 'kotlin-platform-js'
//apply plugin: 'org.jetbrains.kotlin.frontend'

dependencies {
    implement project(":pickleperfect-game-example:pickleperfect-game-shared")

    compile project(":pickleperfect-jam:pickleperfect-jam-backend-pixi-js")
    compile project(":pickleperfect-ecs:pickleperfect-ecs-js")

    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"

    //testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    //compile "org.jetbrains.kotlin:kotlin-test-js:$kotlin_version"
}

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
    kotlinOptions.main = "call"
}



build.doLast() {
    // Copy kotlin.js and kotlin-meta.js from jar into web directory
    configurations.compile.each { File file ->
        copy {
            includeEmptyDirs = false

            from zipTree(file.absolutePath)
            into "build/js/lib"
            include { fileTreeElement ->
                def path = fileTreeElement.path
                path.endsWith(".js") && (path.startsWith("META-INF/resources/") || !path.startsWith("META-INF/"))
            }
        }
    }

    // Copy scripts to web directory
    copy {
        includeEmptyDirs = false
        from new File("build/classes/main")
        into "build/js/lib"
    }

    copy {
        includeEmptyDirs = false
        from new File("build/classes/test")
        into "build/js/lib"
    }

    copy {
        includeEmptyDirs = false
        from new File("build/resources/test")
        into "build/js"
    }

}